"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

import time


def fibonacci_sequence_even_valued_terms_sum(value_limit):
    if 2 == value_limit:
        even_valued_term_sum = 2
    elif 1 == value_limit:
        even_valued_term_sum = 0
    elif 1 > value_limit:
        raise ValueError("cannot calculate fibonacci sequence for integers smaller than 1")
    else:
        even_valued_term_sum = 2

        first_term = 1
        second_term = 2
        result_term = first_term + second_term
        while result_term < value_limit:
            result_term = first_term + second_term
            if 0 == result_term % 2:
                even_valued_term_sum += result_term
            first_term = second_term
            second_term = result_term
    return even_valued_term_sum


def main():
    start_time = time.time()

    even_valued_term_sum = fibonacci_sequence_even_valued_terms_sum(4000000)

    end_time = time.time()
    execution_time = end_time - start_time

    print "the sum of even-valued Fibonacci terms less than four million is {0}; execution time (in seconds): {1}".format(even_valued_term_sum, execution_time)

main()
